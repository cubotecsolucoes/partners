<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Controle extends CI_Controller {

	public function __construct() {
		parent::__construct();
	}

	// categoria e portfolio
	public function getCategoriaList() {
		$this->load->model('portfolio_model', 'portfolio');
		echo (json_encode($this->portfolio->getAllCategoryList()));
	}

	public function deleteCategoria($id) {
		$this->load->model('portfolio_model', 'portfolio');
		echo (json_encode($this->portfolio->deleteCategory($id)));
	}

	public function getPortfolioList() {
		$this->load->model('portfolio_model', 'portfolio');
		echo (json_encode($this->portfolio->getAll()));
	}

	public function deletePortfolio($id) {
		$this->load->model('portfolio_model', 'portfolio');
		echo (json_encode($this->portfolio->deletePortfolio($id)));
	}

	// CHANGE PASS
	public function updatePass($token) {
		$this->load->model('usuarios_model', 'users');

		if ($this->users->updatePass($token, md5($_POST['password']), $_POST['new_password'])) {
			echo (json_encode([1]));
		} else {
			echo (json_encode([0]));
		}
	}

	// VALIDAÇÃO

	public function valida($evento_id, $token, $dia) {
		$this->load->model('reservas_model', 'reservas');
		$data = [
			'liberado' => $this->reservas->liberado($evento_id, $dia, $token),
			'dia'      => $dia,
			'token'    => $token
		];

		$this->load->view('valida/index', $data);
	}

	public function getUserbyname($nome) {
		$this->load->model('usuarios_model', 'user');

		echo (json_encode($this->user->getUserbynome($nome)));
	}

	public function imprimir($evento_id, $token) {
		$this->load->model('reservas_model', 'reservas');
		foreach ($this->reservas->diasQueEleVai($evento_id, $token) as $key => $value) {
			$objeto = [
				'usuario_token' => $token,
				'dia'           => $value
			];
			$this->db->insert('reservados', $objeto);
		}
	}

	public function bloquear($token, $dia) {
		$this->db->where('usuario_token', $token);
		$this->db->where('dia', $dia);

		$this->db->delete('reservados');
	}

	// EVENTOS
	public function getEvento() {
		$this->load->model('eventos_model', 'eventos');
		echo (json_encode($this->eventos->getEventoAtivo()));
	}

	public function getEventoDesativados() {
		$this->load->model('eventos_model', 'eventos');
		echo (json_encode($this->eventos->getEventosDesativados()));
	}

	public function getEventosList() {
		$this->load->model('eventos_model', 'eventos');
		echo (json_encode($this->eventos->getEventosList()));
	}

	public function getDiasEvento($id_evento) {
		$this->load->model('eventos_model', 'eventos');
		echo (json_encode($this->eventos->getDiasEvento($id_evento)));
	}

	public function getQntDias() {
		$this->load->model('eventos_model', 'eventos');
		echo (json_encode($this->eventos->getQntDias()));
	}

	public function getQntReservas($id) {
		$this->load->model('eventos_model', 'eventos');
		echo (json_encode($this->eventos->getQntReservasAndDias($id)));
	}

	public function addEvento() {
		$this->load->model('eventos_model', 'eventos');

		$data = [
			'nome'         => $_POST['nome'],
			'data_inicial' => $_POST['data_inicial'],
			'data_final'   => $_POST['data_final'],
			'reservas'     => $_POST['reservas_dia'],
			'ativo'        => 1,
			'editado_em'   => time(),
		];

		echo (json_encode($this->eventos->add($data)));
	}

	public function editEvento($id) {
		$this->load->model('eventos_model', 'eventos');

		$data = [
			'nome'         => 'Evento Teste',
			'data_inicial' => '2017-04-28',
			'data_final'   => '2017-05-25',
			'ativo'        => 1,
			'editado_em'   => time(),
		];

		$this->eventos->edit($id, $data);
	}

	public function deleteEvento($id) {
		$this->load->model('eventos_model', 'eventos');
		echo (json_encode($this->eventos->delete($id)));
	}

	public function ativarEvento($id) {
		$this->load->model('eventos_model', 'eventos');
		$this->eventos->ativarEvento($id);
	}

	public function desativarEvento($id) {
		$this->load->model('eventos_model', 'eventos');
		$this->eventos->desativarEvento($id);
	}

	// RESERVAS

	public function addReserva() {
		$this->load->model('reservas_model', 'reservas');
		$dia    = $_POST['data'];
		$dia    = explode('-', $dia);
		$objeto = [
			'id_evento'     => $_POST['id_evento'],
			'id_lugar'      => $_POST['lugares'],
			'usuario_token' => $_POST['user_token'],
			'dia'           => "$dia[2]-$dia[1]-$dia[0]"
		];

		if ($this->reservas->add($objeto)) {
			echo (json_encode(['error' => 0]));
		} else {
			echo (json_encode(['error' => 1]));
		}
	}

	public function getQntUsuarioReservou() {
		$id_evento = $_POST['id_evento'];
		$dia       = $_POST['dia'];
		$token     = $_POST['token'];
		$this->load->model('reservas_model', 'reservas');
		echo (json_encode($this->reservas->getQntUserReservou($id_evento, $token, $dia)));
	}

	public function editReserva($id) {
		$this->load->model('reservas_model', 'reservas');

		$objeto = [
		];

		$this->reservas->edit($id, $objeto);
	}

	public function deleteReserva($id) {
		$this->load->model('reservas_model', 'reservas');
		$this->reservas->delete($id);
	}

	public function getReservaList($id_evento) {
		$this->load->model('reservas_model', 'reservas');
		echo (json_encode($this->reservas->getListaReservas($id_evento)));
	}

	public function getReservaUser($id_evento, $token) {
		$this->load->model('reservas_model', 'reservas');
		echo (json_encode($this->reservas->getListaReservasUsuario($id_evento, $token)));
	}

	public function getInfoAllReservas($id_evento) {
		$this->load->model('reservas_model', 'reservas');
		echo (json_encode($this->reservas->getInfoAllReservas($id_evento)));
	}

	public function getInfoReservas($id_evento, $dia) {
		$this->load->model('reservas_model', 'reservas');
		echo (json_encode($this->reservas->getInfoReservaDia($id_evento, $dia)));
	}

	public function diasQueVai($id_evento, $token) {
		$this->load->model('reservas_model', 'reservas');
		echo (json_encode($this->reservas->diasQueEleVai($id_evento, $token)));
		exit;
	}
	public function lugaresDoDia($id_evento, $dia, $token) {
		$this->load->model('reservas_model', 'reservas');
		echo (json_encode($this->reservas->lugaresPorDia($id_evento, $dia, $token)));
		exit;
	}

	// USUARIOS
	public function getUsuariosList() {
		$this->load->model('usuarios_model', 'user');
		echo (json_encode($this->user->getUserList()));
	}

	public function getUsuario($id) {
		$this->load->model('usuarios_model', 'user');
		echo (json_encode($this->user->getUserById($id)));
	}

	public function deleteUsuario($id) {
		$this->load->model('usuarios_model', 'user');
		$this->user->delete($id);
	}

	public function addUsuario() {
		$this->load->model('usuarios_model', 'user');

		$this->user->_setNome($_POST['nome']);
		$this->user->_setUsuario($_POST['usuario']);
		$this->user->_setSenha($_POST['senha']);
		$this->user->_setNomeResponsavel($_POST['nome_responsavel']);
		$this->user->_setCpf($_POST['cpf']);
		$this->user->_setTelefone($_POST['telefone']);
		$this->user->_setCelular($_POST['celular']);
		$this->user->_setEmail($_POST['email']);
		$this->user->_setRua($_POST['rua']);
		$this->user->_setNumero($_POST['numero']);
		$this->user->_setBairro($_POST['bairro']);
		$this->user->_setComplemento($_POST['complemento']);
		$this->user->_setCep($_POST['cep']);
		$this->user->_setCidade($_POST['cidade']);
		$this->user->_setEstado($_POST['estado']);
		$this->user->_setDataNascimento($_POST['data_nascimento']);
		$this->user->_setToken($_POST['senha']);
		$this->user->_setAcesso($_POST['acesso']);

		echo (json_encode($this->user->add()));
	}

	public function editUsuario($id) {
		$this->load->model('usuarios_model', 'user');

		$this->user->_setId($id);

		$this->user->_setNome($_POST['nome']);
		$this->user->_setUsuario($_POST['usuario']);
		$this->user->_setSenha($_POST['senha']);
		$this->user->_setNomeResponsavel($_POST['nome_responsavel']);
		$this->user->_setCpf($_POST['cpf']);
		$this->user->_setTelefone($_POST['telefone']);
		$this->user->_setCelular($_POST['celular']);
		$this->user->_setEmail($_POST['email']);
		$this->user->_setRua($_POST['rua']);
		$this->user->_setNumero($_POST['numero']);
		$this->user->_setBairro($_POST['bairro']);
		$this->user->_setComplemento($_POST['complemento']);
		$this->user->_setCep($_POST['cep']);
		$this->user->_setCidade($_POST['cidade']);
		$this->user->_setEstado($_POST['estado']);
		$this->user->_setDataNascimento($_POST['data_nascimento']);
		$this->user->_setToken($_POST['senha']);
		$this->user->_setAcesso($_POST['acesso']);

		echo (json_encode($this->user->edit()));
	}

	// LUGARES

	public function lugareslist() {
		$this->load->model('lugares_model', 'lugares');
		$loc   = $_POST['localizacao'];
		$nivel = $_POST['piso'];
		echo (json_encode($this->lugares->getLugaresLivres($loc, $nivel)));
	}

	public function alllugareslist() {
		$this->load->model('lugares_model', 'lugares');
		echo (json_encode($this->lugares->getAllLugaresLivres()));
	}

	public function resetLugares($token) {
		$this->load->model('lugares_model', 'lugares');
		if ($token === "qweasdzxc") {
			$mapa = [
				'Plateia'  => [
					'Direita' => [
						'A'      => ['inicio'      => 01, 'final'      => 11],
						'B'      => ['inicio'      => 01, 'final'      => 11],
						'C'      => ['inicio'      => 01, 'final'      => 11],
						'D'      => ['inicio'      => 01, 'final'      => 12],
						'E'      => ['inicio'      => 01, 'final'      => 12],
						'F'      => ['inicio'      => 01, 'final'      => 12],
						'G'      => ['inicio'      => 01, 'final'      => 13],
						'H'      => ['inicio'      => 01, 'final'      => 13],
						'I'      => ['inicio'      => 01, 'final'      => 13],
						'J'      => ['inicio'      => 01, 'final'      => 14],
						'K'      => ['inicio'      => 01, 'final'      => 14],
						'L'      => ['inicio'      => 01, 'final'      => 14],
						'M'      => ['inicio'      => 01, 'final'      => 15],
					],

					'Centro' => [
						'A'     => ['inicio'     => 12, 'final'     => 22],
						'B'     => ['inicio'     => 12, 'final'     => 22],
						'C'     => ['inicio'     => 12, 'final'     => 22],
						'D'     => ['inicio'     => 13, 'final'     => 24],
						'E'     => ['inicio'     => 13, 'final'     => 24],
						'F'     => ['inicio'     => 13, 'final'     => 25],
						'G'     => ['inicio'     => 14, 'final'     => 26],
						'H'     => ['inicio'     => 14, 'final'     => 26],
						'I'     => ['inicio'     => 14, 'final'     => 27],
						'J'     => ['inicio'     => 15, 'final'     => 28],
						'K'     => ['inicio'     => 15, 'final'     => 28],
						'L'     => ['inicio'     => 15, 'final'     => 29],
					],

					'Esquerda' => [
						'A'       => ['inicio'       => 23, 'final'       => 33],
						'B'       => ['inicio'       => 23, 'final'       => 33],
						'C'       => ['inicio'       => 23, 'final'       => 33],
						'D'       => ['inicio'       => 25, 'final'       => 36],
						'E'       => ['inicio'       => 25, 'final'       => 36],
						'F'       => ['inicio'       => 26, 'final'       => 37],
						'G'       => ['inicio'       => 27, 'final'       => 39],
						'H'       => ['inicio'       => 27, 'final'       => 39],
						'I'       => ['inicio'       => 28, 'final'       => 40],
						'J'       => ['inicio'       => 29, 'final'       => 42],
						'K'       => ['inicio'       => 29, 'final'       => 42],
						'L'       => ['inicio'       => 30, 'final'       => 43],
						'M'       => ['inicio'       => 16, 'final'       => 30],
					]
				],
				'Mezanino' => [
					'Direita' => [
						'N'      => ['inicio'      => 1, 'final'      => 12],
						'O'      => ['inicio'      => 1, 'final'      => 12],
						'P'      => ['inicio'      => 1, 'final'      => 12],
						'Q'      => ['inicio'      => 1, 'final'      => 16],
						'R'      => ['inicio'      => 1, 'final'      => 17],
						'S'      => ['inicio'      => 1, 'final'      => 17],
						'T'      => ['inicio'      => 1, 'final'      => 17],
						'U'      => ['inicio'      => 1, 'final'      => 18],
						'V'      => ['inicio'      => 1, 'final'      => 18],
						'W'      => ['inicio'      => 1, 'final'      => 18],
						'X'      => ['inicio'      => 1, 'final'      => 19],
						'Y'      => ['inicio'      => 1, 'final'      => 19],
						'Z'      => ['inicio'      => 1, 'final'      => 19],
						'Z1'     => ['inicio'     => 1, 'final'     => 20],
						'Z2'     => ['inicio'     => 1, 'final'     => 20],
						'Z3'     => ['inicio'     => 1, 'final'     => 20],
						'Z4'     => ['inicio'     => 1, 'final'     => 18],
					],

					'Centro' => [
						'Q'     => ['inicio'     => 17, 'final'     => 34],
						'R'     => ['inicio'     => 18, 'final'     => 35],
						'S'     => ['inicio'     => 18, 'final'     => 36],
						'T'     => ['inicio'     => 18, 'final'     => 36],
						'U'     => ['inicio'     => 19, 'final'     => 37],
						'V'     => ['inicio'     => 19, 'final'     => 38],
						'W'     => ['inicio'     => 19, 'final'     => 38],
						'X'     => ['inicio'     => 20, 'final'     => 39],
						'Y'     => ['inicio'     => 20, 'final'     => 40],
						'Z'     => ['inicio'     => 20, 'final'     => 40],
						'Z1'    => ['inicio'    => 21, 'final'    => 41],
						'Z2'    => ['inicio'    => 21, 'final'    => 42],
					],

					'Esquerda' => [
						'N'       => ['inicio'       => 13, 'final'       => 24],
						'O'       => ['inicio'       => 13, 'final'       => 24],
						'P'       => ['inicio'       => 13, 'final'       => 24],
						'Q'       => ['inicio'       => 35, 'final'       => 50],
						'R'       => ['inicio'       => 36, 'final'       => 52],
						'S'       => ['inicio'       => 37, 'final'       => 53],
						'T'       => ['inicio'       => 37, 'final'       => 53],
						'U'       => ['inicio'       => 38, 'final'       => 55],
						'V'       => ['inicio'       => 39, 'final'       => 56],
						'W'       => ['inicio'       => 39, 'final'       => 56],
						'X'       => ['inicio'       => 40, 'final'       => 58],
						'Y'       => ['inicio'       => 41, 'final'       => 59],
						'Z'       => ['inicio'       => 41, 'final'       => 59],
						'Z1'      => ['inicio'      => 42, 'final'      => 61],
						'Z2'      => ['inicio'      => 43, 'final'      => 62],
						'Z3'      => ['inicio'      => 44, 'final'      => 63],
						'Z4'      => ['inicio'      => 19, 'final'      => 36],
					]
				]
			];
		} else {
			echo ("Error");
			return false;
		}

		$this->lugares->resetLugares($mapa);
	}

	public function lugaresOcupados($evento_id, $dia, $token) {
		$this->load->model('lugares_model', 'lugares');
		$retorno = [];
		$dados   = $this->lugares->getLugeresOcupados($evento_id, $dia);
		foreach ($dados as $key => $value) {
			$retorno[] = $value['id_lugar'];
		}
		echo (json_encode($retorno));
	}

	public function alllugaresOcupados() {
		$this->load->model('lugares_model', 'lugares');
		$retorno = [];
		$dados   = $this->lugares->getAllLugeresOcupados();
		foreach ($dados as $key => $value) {
			$retorno[] = $value['id_lugar'];
		}
		echo (json_encode($retorno));
	}

}

/* End of file Controle.php */
/* Location: ./application/controllers/Controle.php */
